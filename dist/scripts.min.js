let pokemonRepository = (function() {
  const e = [],
    t = 'https://pokeapi.co/api/v2/pokemon/?limit=10';
  let n = document.querySelector('#modal-container');
  function i(t) {
    'object' == typeof t && 'name' in t && 'detailsUrl' in t
      ? e.push(t)
      : alert('Invalid attempt to add non-object to pokemonList');
  }
  function o(e, t) {
    e.addEventListener('click', function() {
      !(function(e) {
        pokemonRepository.loadDetails(e).then(function() {
          !(function(e) {
            let t = $('.modal-body'),
              n = $('.modal-title');
            $('.modal-header');
            n.empty(), t.empty();
            let i = document.createElement('p');
            i.innerText = 'ID: ' + e.id;
            let o = document.createElement('img');
            o.setAttribute('src', e.imageUrl),
              o.classList.add('img-fluid', 'mb-2', 'pokepic');
            let a = document.createElement('p');
            a.innerText = 'Height : ' + e.height / 0.1 + ' cm';
            let s = document.createElement('p');
            s.innerText = 'Weight : ' + e.weight / 10 + ' kg';
            let l = document.createElement('p');
            l.innerText = 'Types : ' + e.types;
            let d = document.createElement('p');
            (d.innerText = 'Abilities : ' + e.abilities),
              n.append(e.name),
              t.append(i, o, a, s, l, d);
          })(e);
        });
      })(t);
    });
  }
  return (
    window.addEventListener('keydown', e => {
      'Escape' === e.key && n.classList.contains('is-visible') && hideModal();
    }),
    {
      add: i,
      getAll: function() {
        return e;
      },
      addListItem: function(e) {
        let t = document.querySelector('.pokemon-list'),
          n = document.createElement('li'),
          i = document.createElement('button');
        (i.innerText = e.name),
          i.classList.add(
            'card',
            'button-class',
            'list-group-item',
            'text-capitalize',
            'btn',
            'btn-outline-dark'
          ),
          i.setAttribute('type', 'button'),
          i.setAttribute('data-target', '#pokemon-info'),
          i.setAttribute('data-toggle', 'modal'),
          i.setAttribute('data-bs-name', e.name),
          n.appendChild(i),
          o(i, e),
          t.appendChild(n);
      },
      loadList: function() {
        return (
          showLoadingMessage(),
          fetch(t)
            .then(function(e) {
              return e.json();
            })
            .then(function(e) {
              hideLoadingMessage(),
                e.results.forEach(function(e) {
                  i({ name: e.name, detailsUrl: e.url });
                });
            })
            .catch(function(e) {
              hideLoadingMessage(), console.error(e);
            })
        );
      },
      loadDetails: function(e) {
        showLoadingMessage();
        let t = e.detailsUrl;
        return fetch(t)
          .then(function(e) {
            return e.json();
          })
          .then(function(t) {
            hideLoadingMessage(),
              (e.id = t.id),
              (e.imageUrl = t.sprites.other.dream_world.front_default),
              (e.height = t.height),
              (e.weight = t.weight),
              (e.types = []),
              t.types.forEach(function(t) {
                e.types.push(' ' + t.type.name + ' ');
              }),
              (e.abilities = []),
              t.abilities.forEach(function(t) {
                e.abilities.push(' ' + t.ability.name + ' ');
              });
          })
          .catch(function(e) {
            hideLoadingMessage(), console.error(e);
          });
      }
    }
  );
})();
pokemonRepository.loadList().then(function() {
  pokemonRepository.getAll().forEach(function(e) {
    pokemonRepository.addListItem(e);
  });
});
